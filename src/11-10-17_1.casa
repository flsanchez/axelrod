#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "graph.h"
#include "agent.h"
#include "functions.h"

/* La idea de este main es que hace un barrido en la cantidad de links agregados
  ,al azar y sin restricciones de distancia entre los nodos, inicialmente sobre
  una red con topologia vecindad de Moore orden 1 con una cantidad niter de
  repeticiones para cada cantidad de links agregados */

int main(){

  srand(time(NULL));

  int n = 50;
  int nRewire = 0;
  int t = time(NULL);
  int idx = 10;
  int neigOrdEdges = 2;
  int neigOrdRewire = 2;
  int nEdgeRew = 0;
  char name[100];
  int cont;
  int niter = 20;
  int nEdgesAdd = 0;
  int nEdgesAddVect[8] = {1, 10, 100, 500, 1000, 2500, 5000, 10000};
  FILE *fs;

  vertex* graph = (vertex*) malloc(n*n*sizeof(vertex));
  for(int j = 0; j<8; j++){
    nEdgesAdd = nEdgesAddVect[j];
    for(int i = 0; i<niter; i++){
      graphInit(graph, n);
      graphFill(graph, n, nEdgeRew, nRewire, neigOrdEdges, neigOrdRewire);
      graphEdgesAddNRand(graph, n, nEdgesAdd);
      sprintf(name, "nEdgesAdd_%d_%d.net", nEdgesAdd, i);
      fs = fopen(name,"w");
      graphPrintToFile(graph, n, fs);
      fclose(fs);
      graphFree(graph,n);
    }
  }

  free(graph);

  t = time(NULL)-t;
  printf("Tiempo transcurrido: %d:%d:%d\n", t/3600, (t/60)%60, t%60);
}
