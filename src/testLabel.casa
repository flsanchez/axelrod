#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "agent.h"
#include "graph.h"
#include "label.h"
#include "axelrod.h"

int main(){

  int n = 4;
  int f = 11;
  int q = 10;
  int qF = 2;
  int nStub = 5;
  int niter = 500;
  int paso = 100;
  int nRewire = 1;
  int nEdgeRew = 0;
  int neigOrdEdges = 2;
  int neigOrdRewire = 2;
  int labelFlag = 1;
  FILE *fs;
  char name[100];

  srand(time(NULL));

  agent* lattice = (agent*) malloc(n * n * sizeof(agent));
  vertex* graph = (vertex*) malloc(n * n * sizeof(vertex));
  latticeInit(lattice, n, f);
  latticeFill(lattice, n, q, qF);
  latticeSetStub(lattice, n, nStub);
  graphInit(graph, n);
  graphFill(graph, n, nEdgeRew, nRewire, neigOrdEdges, neigOrdRewire);
  //graphEdgesRm(graph, 0, 3);
  //graphEdgesRm(graph, 0, 4);
  //graphEdgesAdd(graph,0,8);
  //int feats[] = {1,2,0,0,0,0,0,2,2};
  //for(int i = 0; i<9; i++) lattice[i].feat[0] = i;
  //lattice[8].feat[0] = 0;


  latticePrintFeatN(lattice,n,f-1);
  latticeLabelFeatN(graph,lattice,n,f-1);
  fs = fopen("lattice.ax","w");
  latticePrintToFile(lattice,n,fs,labelFlag);
  fclose(fs);
  printf("\n");
  latticePrintLabels(lattice,n);
  latticePrintFeats(lattice,n);

  latticeFree(lattice,n);
  free(lattice);
  graphFree(graph,n);
  free(graph);

  return 0;
}
